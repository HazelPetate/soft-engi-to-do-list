# Importing required libraries
import os
def quicksort(items):
    if len(items) <= 1:
        return items
    pivot = items[0]
    left = []
    right = []
    for item in items[1:]:
        if item < pivot:
            left.append(item)
        else:
            right.append(item)
    return quicksort(left) + [pivot] + quicksort(right)

def display_tasks(tasks):
    print("\nTo-Do List:\n")
    for i in range(len(tasks)):
        status = "Done" if tasks[i][1] else "Not done"
        print(f"{i+1}. {tasks[i][0]} ({status})")

def add_task(tasks):
    task = input("Enter the task: ")
    tasks.append([task, False])
    print("Task added successfully!")
    return tasks

def remove_task(tasks):
    display_tasks(tasks)
    choice = int(input("Enter the number of the task to remove: ")) - 1
    tasks.pop(choice)
    print("Task removed successfully!")
    return tasks
    
def mark_task_done(tasks):
    display_tasks(tasks)
    choice = int(input("Enter the number of the task to mark as done: ")) - 1
    tasks[choice][1] = True
    print("Task marked as done!")
    return tasks

# Load tasks from a file, if it exists
filename = "tasks.txt"
tasks = []
if os.path.exists(filename):
    with open(filename, "r") as f:
        tasks = f.read().splitlines()

# Start a loop that displays a menu and waits for user input
while True:
    print("\nMenu:\n")
    print("1. Show List")
    print("2. Add Task")
    print("3. Remove Task")
    print("4. Mark Task as Done")
    print("5. Clear List")
    print("6. Exit")
    choice = int(input("\nEnter your choice: "))

    # If the user chooses to show the list
    if choice == 1:
        sorted_tasks = quicksort(tasks)
        display_tasks(sorted_tasks)

    # If the user chooses to add a task
    elif choice == 2:
        tasks = add_task(tasks)

    # If the user chooses to remove a task
    elif choice == 3:
        tasks = remove_task(tasks)

    # If the user chooses to mark a task as done
    elif choice == 4:
        tasks = mark_task_done(tasks)
        
    # If the user chooses to clear the list
    elif choice == 5:
        tasks.clear()
        print("List cleared successfully!")

    # If the user chooses to exit
    elif choice == 6:
        # Save tasks to a file
        with open(filename, "w") as f:
            for task in tasks:
                f.write(task + "\n")
        print("Goodbye!")
        break

